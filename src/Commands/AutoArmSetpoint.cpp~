// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "AutoArmSetpoint.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

AutoArmSetpoint::AutoArmSetpoint(int degreesRotation): Command() {
    m_degreesRotation = degreesRotation;
        // Use requires() here to declare subsystem dependencies
    // eg. requires(chassis);
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::arm.get());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

// Called just before this Command runs the first time
void AutoArmSetpoint::Initialize() {

}

// Called repeatedly when this Command is scheduled to run
void AutoArmSetpoint::Execute() {
		Robot::arm->armLeft->Set(0.45);
		Robot::arm->armRight->Set(0.45);
}

// Make this return true when this Command no longer needs to run execute()
bool AutoArmSetpoint::IsFinished() {
	// if the difference between desired and current is > 10deg, move
	/* if ((Robot::arm->ConvertRotations(m_degreesRotation, false) - Robot::arm->armEncoder->Get()) > 10)
		return false;

	else
		return true;
	*/
	// if  current angle is larger then the commanded angle OR switch is enabled
	if ( Robot::arm->CurrentArmAngle() > m_degreesRotation || Robot::arm->armLimit->Get() == false)
	{
		return true;
	}
	else
	{
		return false;
	}
}

// Called once after isFinished returns true
void AutoArmSetpoint::End() {
	Robot::arm->armLeft->Set(0.0);
	Robot::arm->armRight->Set(0.0);
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void AutoArmSetpoint::Interrupted() {

}
